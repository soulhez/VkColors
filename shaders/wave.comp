#version 450
#extension GL_ARB_separate_shader_objects : enable

uint toRGBA32(vec4 color) {
    uvec4 uColor = uvec4(uint(color.r * 255), uint(color.g * 255), uint(color.b * 255), uint(color.a * 255));
    return ((uColor.r & 255) << 24) | ((uColor.g & 255) << 16) | ((uColor.b & 255) << 8) | 255;
}

vec4 toVec4(uint color) {
    uvec4 uColor = uvec4((color >> 24) & 255, (color >> 16) & 255, (color >> 8) & 255, 0);
    return vec4(uColor.r / 255, uColor.g / 255, uColor.b / 255, 0);
}

struct Element {
    uint index;
    uint score;
};

layout(binding = 0) buffer Pyramid {
    Element[] elements;
} pyramid[24];

layout(push_constant) uniform Info {
    uint color;
    uint count;
    uint targetIndex;
} info;

layout(local_size_x_id = 0) in;

void main() {
}