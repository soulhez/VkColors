#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x_id = 0) in;
layout (constant_id = 1) const int pyramidLevels = 24;

struct Element {
    uint index;
    uint score;
};

layout(set = 0, binding = 0) buffer Pyramid {
    Element[] elements;
} pyramid[pyramidLevels];

layout(set = 1, binding = 0, rgba8) uniform image2D image;

layout(set = 1, binding = 1) buffer Input {
    ivec2[] data;
} inputData;

layout(set = 1, binding = 2) buffer Output {
    uint index;
} outputData;

layout(push_constant) uniform Info {
    int width;
    int height;
    uint count;
    uint targetlevel;
    uint color;
} info;

vec4 toVec4(uint color) {
    uvec4 uColor = uvec4((color >> 24) & 255, (color >> 16) & 255, (color >> 8) & 255, 0);
    return vec4(uColor.r / 255, uColor.g / 255, uColor.b / 255, 0);
}

void main() {
    uint index = pyramid[0].elements[0].index;
    imageStore(image, inputData.data[index], toVec4(info.color));
}